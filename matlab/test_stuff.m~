%% DEPTH TEST
depth_sub = rossubscriber('/camera/depth/image_rect_raw');

while true
    depth = receive(depth_sub, 10);
    depth_image = readImage(depth);
    depth_image = depth_image*50;
    imshow(depth_image);
end



%% IMAGE TEST
color_sub = rossubscriber('/camera/color/image_raw');
while true
    color = receive(color_sub, 10);
color_image = readImage(color);
imshow(color_image);
end

%% VFH
depth_img_width = 424;
depth_img_height = 240;
camera_field_of_view = 1.487021; %radians (~85 deg)

depth_pixel_layers = 10;
depth_sub = rossubscriber('/camera/depth/image_rect_raw');

VFH = robotics.VectorFieldHistogram;
VFH.DistanceLimits = [0.3 1.1];
VFH.RobotRadius = 0.23;
VFH.SafetyDistance = 0.1;
VFH.MinTurningRadius = 0.55;
VFH.HistogramThresholds = [0.3 1];
VFH.UseLidarScan = true;

while true
    depth = receive(depth_sub, 10);
    depth_image = readImage(depth);
    
    for i = 1:depth_pixel_layers
        
    end
    ranges = depth_image(depth_img_height/2,:);
    ranges = flip(ranges);
    ranges = double(ranges)/1000;
    angles = linspace((-camera_field_of_view/2),(camera_field_of_view/2),depth_img_width);
    ranges = ranges./cos(angles);

    scan = lidarScan(ranges,angles);
    plot(scan);

%     targetDir = 0;
%     steeringDir = VFH(scan,targetDir);
%     steeringDir = rad2deg(steeringDir)

%     h = figure;
%     set(h,'Position',[50 50 800 400])
%     show(VFH)

end
